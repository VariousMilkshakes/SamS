var assert = require('assert');

exports.doc = {
  english: 'hello',
  japanese: 'konichiwa',
  number: 2,
  list: [1,2,3]
};

exports.update_operators = {
  $inc: {
    query: { $inc: { number: 2 }},
    result: function (doc) {
      assert.equal(doc.number, 4);
    },
    version: '2.6'
  },
  $mul: {
    query: { $mul: { number: 3 }},
    result: function (doc) {
      assert.equal(doc.number, 6);
    },
    version: '2.6'
  },
  $rename: {
    query: { $rename: { english: 'american' }},
    result: function (doc) {
      assert.equal(doc.american, 'hello');
      assert(!doc.english);
    },
    version: '2.6'
  },
  $setOnInsert: {
    query: { $setOnInsert: { 
      french: 'bonjour',
      english: 'goodbye'
    }},
    result: function (doc) {
      assert.notEqual(doc.french, 'bonjour');
      assert.equal(doc.english, 'hello');
    },
    version: '2.6'
  },
  $set: {
    query: { $set: { english: 'hey' }},
    result: function (doc) {
      assert.equal(doc.english, 'hey');
    },
    version: '2.6'
  },
  $unset: {
    query: { $unset: { english: '' }},
    result: function (doc) {
      assert(!doc.english);
    },
    version: '2.6'
  },
  $min: {
    query: { $min: { number: 1 }},
    result: function (doc) {
      assert.equal(doc.number, 1);
    },
    version: '2.6'
  },
  $max: {
    query: { $max: { number: 3 }},
    result: function (doc) {
      assert.equal(doc.number, 3);
    },
    version: '2.6'
  },
  $currentDate: {
    query: { $currentDate: { now: true, nowTS: { $type: "timestamp" } }},
    result: function (doc) {
      assert(doc.now);
      assert(doc.nowTS);
    },
    version: '2.6'
  }
};

exports.array_operators = {
  $: {}, // TODO
  $addToSet: {}, // TODO
  $pop: {}, // TODO
  $pullAll: {}, // TODO
  $pull: {}, // TODO
  $pushAll: {}, // TODO
  $push: {} // TODO
};

exports.update_modifiers = {
  $each: {}, // TODO
  $slice: {}, // TODO
  $sort: {}, // TODO
  $position: {} // TODO
};

exports.bitwise_operators = {
  $bit: {} // TODO
};

exports.isolation_modifiers = {
  $isolated: {} // TODO
};