var common = require('../lib-cov/common');
var mock_fs = require('mock-fs');
var fs = require('fs');
var osenv = require('osenv');
var path = require('path');
var assert = require('assert');
var ini = require('ini');
var CONFIG_PATH = path.join(osenv.home(), '.orcli');

describe('common', function () {
  describe('get_config', function () {
    afterEach(mock_fs.restore);

    it('should retrieve the current config', function () {
      var mock_fs_opts = {};
      mock_fs_opts[CONFIG_PATH] = ini.encode({ current: 'hello!' });
      mock_fs(mock_fs_opts);

      var config = common.get_config();
      assert(config.current === 'hello!');
    });

    it('should return a default config', function () {
      mock_fs();

      var config = common.get_config();
      assert(config.current === null);
    });
  });

  describe('put_config', function () {
    afterEach(mock_fs.restore);

    it('should write a new config', function () {
      mock_fs();

      var config = { current: 'flamingo' };
      common.put_config(config);
      var actual_config = ini.decode(fs.readFileSync(CONFIG_PATH, 'utf-8'));
      assert.equal(config.current, actual_config.current);
    });
  });
});
