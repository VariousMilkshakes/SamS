var graph = require('../../lib/commands/graph');
var nock = require('nock');
var OIO_URL = 'https://api.orchestrate.io';
var assert = require('assert');

describe('graph', function () {
  afterEach(function () {
    nock.cleanAll();
  });

  it('should get relations', function (done) {
    var scope = nock(OIO_URL)
    .get('/v0/users/garbados/relation/friends/likes')
    .reply(200);

    graph(['users', 'garbados', 'friends', 'likes'], {})
    .then(function () {
      assert(scope.isDone());
      done();
    })
    .fail(done);
  });

  it('should create relations', function (done) {
    var scope = nock(OIO_URL)
    .put('/v0/users/garbados/relation/friends/users/garrute')
    .reply(201)
    .put('/v0/users/garbados/relation/likes/users/garrute')
    .reply(201);

    graph(['users', 'garbados', 'friends', 'likes', 'create', 'users', 'garrute'], {})
    .then(function () {
      assert(scope.isDone());
      done();
    })
    .fail(done);
  });

  it('should delete relations', function (done) {
    var scope = nock(OIO_URL)
    .delete('/v0/users/garbados/relation/friends/users/garrute?purge=true')
    .reply(201)
    .delete('/v0/users/garbados/relation/likes/users/garrute?purge=true')
    .reply(201);

    graph(['users', 'garbados', 'friends', 'likes', 'delete', 'users', 'garrute'], {})
    .then(function () {
      assert(scope.isDone());
      done();
    })
    .fail(done);
  });
});
